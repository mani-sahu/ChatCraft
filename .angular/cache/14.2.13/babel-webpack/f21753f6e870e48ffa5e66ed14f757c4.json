{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@angular/fire/auth';\nimport { user } from '@angular/fire/auth';\nimport * as i1 from '@angular/router';\nimport { of, pipe } from 'rxjs';\nimport { map, take, switchMap } from 'rxjs/operators';\nimport { VERSION } from '@angular/fire';\nimport { registerVersion } from 'firebase/app';\nconst loggedIn = map(user => !!user);\n\nclass AuthGuard {\n  router;\n  auth;\n\n  constructor(router, auth) {\n    this.router = router;\n    this.auth = auth;\n  }\n\n  canActivate = (next, state) => {\n    const authPipeFactory = next.data.authGuardPipe || (() => loggedIn);\n\n    return user(this.auth).pipe(take(1), authPipeFactory(next, state), map(can => {\n      if (typeof can === 'boolean') {\n        return can;\n      } else if (Array.isArray(can)) {\n        return this.router.createUrlTree(can);\n      } else {\n        // TODO(EdricChan03): Add tests\n        return this.router.parseUrl(can);\n      }\n    }));\n  };\n  static ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.Auth));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'any'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i2.Auth\n    }];\n  }, null);\n})();\n\nconst canActivate = pipe => ({\n  canActivate: [AuthGuard],\n  data: {\n    authGuardPipe: pipe\n  }\n});\n\nconst isNotAnonymous = map(user => !!user && !user.isAnonymous);\nconst idTokenResult = switchMap(user => user ? user.getIdTokenResult() : of(null));\nconst emailVerified = map(user => !!user && user.emailVerified);\nconst customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\n\nconst hasCustomClaim = // eslint-disable-next-line no-prototype-builtins\nclaim => pipe(customClaims, map(claims => claims.hasOwnProperty(claim)));\n\nconst redirectUnauthorizedTo = redirect => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\n\nconst redirectLoggedInTo = redirect => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n\nclass AuthGuardModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'auth-guard');\n  }\n\n  static ɵfac = function AuthGuardModule_Factory(t) {\n    return new (t || AuthGuardModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AuthGuardModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AuthGuard]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthGuardModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AuthGuard]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AuthGuard, AuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };","map":{"version":3,"names":["i0","Injectable","NgModule","i2","user","i1","of","pipe","map","take","switchMap","VERSION","registerVersion","loggedIn","AuthGuard","router","auth","constructor","canActivate","next","state","authPipeFactory","data","authGuardPipe","can","Array","isArray","createUrlTree","parseUrl","ɵfac","Router","Auth","ɵprov","type","args","providedIn","isNotAnonymous","isAnonymous","idTokenResult","getIdTokenResult","emailVerified","customClaims","claims","hasCustomClaim","claim","hasOwnProperty","redirectUnauthorizedTo","redirect","redirectLoggedInTo","AuthGuardModule","full","ɵmod","ɵinj","providers"],"sources":["/home/manisha/Projects/angular-chat-app-master/node_modules/@angular/fire/fesm2022/angular-fire-auth-guard.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@angular/fire/auth';\nimport { user } from '@angular/fire/auth';\nimport * as i1 from '@angular/router';\nimport { of, pipe } from 'rxjs';\nimport { map, take, switchMap } from 'rxjs/operators';\nimport { VERSION } from '@angular/fire';\nimport { registerVersion } from 'firebase/app';\n\nconst loggedIn = map(user => !!user);\nclass AuthGuard {\n    router;\n    auth;\n    constructor(router, auth) {\n        this.router = router;\n        this.auth = auth;\n    }\n    canActivate = (next, state) => {\n        const authPipeFactory = next.data.authGuardPipe || (() => loggedIn);\n        return user(this.auth).pipe(take(1), authPipeFactory(next, state), map(can => {\n            if (typeof can === 'boolean') {\n                return can;\n            }\n            else if (Array.isArray(can)) {\n                return this.router.createUrlTree(can);\n            }\n            else {\n                // TODO(EdricChan03): Add tests\n                return this.router.parseUrl(can);\n            }\n        }));\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuard, deps: [{ token: i1.Router }, { token: i2.Auth }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuard, providedIn: 'any' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.Auth }]; } });\nconst canActivate = (pipe) => ({\n    canActivate: [AuthGuard], data: { authGuardPipe: pipe }\n});\nconst isNotAnonymous = map(user => !!user && !user.isAnonymous);\nconst idTokenResult = switchMap((user) => user ? user.getIdTokenResult() : of(null));\nconst emailVerified = map(user => !!user && user.emailVerified);\nconst customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nconst hasCustomClaim = \n// eslint-disable-next-line no-prototype-builtins\n(claim) => pipe(customClaims, map(claims => claims.hasOwnProperty(claim)));\nconst redirectUnauthorizedTo = (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nconst redirectLoggedInTo = (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n\nclass AuthGuardModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'auth-guard');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuardModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuardModule, providers: [AuthGuard] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: AuthGuardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AuthGuard]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AuthGuard, AuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}