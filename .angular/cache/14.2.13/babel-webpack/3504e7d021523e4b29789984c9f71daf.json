{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { combineLatest, map, of, startWith, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"src/app/services/chats.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/list\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/divider\";\nimport * as i12 from \"@angular/material/autocomplete\";\nimport * as i13 from \"../../pipes/date-display.pipe\";\nconst _c0 = [\"endOfChat\"];\n\nfunction HomeComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵlistener(\"click\", function HomeComponent_mat_option_7_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const user_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.createChat(user_r8));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r8.displayName, \" \");\n  }\n}\n\nfunction HomeComponent_mat_list_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-option\", 19);\n    i0.ɵɵelement(1, \"img\", 20);\n    i0.ɵɵelementStart(2, \"p\", 21)(3, \"span\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 23);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"dateDisplay\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"p\", 24);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"mat-divider\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const chat_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", chat_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", chat_r11.chatPic ? chat_r11.chatPic : \"assets/images/image-placeholder.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(chat_r11.chatName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 5, chat_r11.lastMessageDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(chat_r11.lastMessage);\n  }\n}\n\nfunction HomeComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"img\", 26);\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const selectedChat_r12 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", selectedChat_r12.chatPic ? selectedChat_r12.chatPic : \"assets/images/image-placeholder.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(selectedChat_r12.chatName);\n  }\n}\n\nfunction HomeComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Messages\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    sender: a0\n  };\n};\n\nfunction HomeComponent_ng_container_20_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"dateDisplay\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const message_r17 = ctx.$implicit;\n    const currentUser_r13 = i0.ɵɵnextContext(2).ngIf;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, message_r17.senderId === currentUser_r13.uid));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r17.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, message_r17.sentDate));\n  }\n}\n\nfunction HomeComponent_ng_container_20_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_20_ng_container_1_div_1_Template, 6, 7, \"div\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const messages_r15 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", messages_r15);\n  }\n}\n\nfunction HomeComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_20_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r6.messages$));\n  }\n}\n\nexport class HomeComponent {\n  constructor(usersService, chatsService) {\n    this.usersService = usersService;\n    this.chatsService = chatsService;\n    this.user$ = this.usersService.currentUserProfile$;\n    this.myChats$ = this.chatsService.myChats$;\n    this.searchControl = new UntypedFormControl('');\n    this.messageControl = new UntypedFormControl('');\n    this.chatListControl = new UntypedFormControl('');\n    this.otherUsers$ = combineLatest([this.usersService.allUsers$, this.user$]).pipe(map(([users, user]) => users.filter(u => u.uid !== user?.uid)));\n    this.users$ = combineLatest([this.otherUsers$, this.searchControl.valueChanges.pipe(startWith(''))]).pipe(map(([users, searchString]) => {\n      return users.filter(u => u.displayName?.toLowerCase().includes(searchString.toLowerCase()));\n    }));\n    this.selectedChat$ = combineLatest([this.chatListControl.valueChanges, this.myChats$]).pipe(map(([value, chats]) => chats.find(c => c.id === value[0])));\n  }\n\n  ngOnInit() {\n    this.messages$ = this.chatListControl.valueChanges.pipe(map(value => value[0]), switchMap(chatId => this.chatsService.getChatMessages$(chatId)), tap(() => {\n      this.scrollToBottom();\n    }));\n  }\n\n  createChat(user) {\n    this.chatsService.isExistingChat(user.uid).pipe(switchMap(chatId => {\n      if (!chatId) {\n        return this.chatsService.createChat(user);\n      } else {\n        return of(chatId);\n      }\n    })).subscribe(chatId => {\n      this.chatListControl.setValue([chatId]);\n    });\n  }\n\n  sendMessage() {\n    const message = this.messageControl.value;\n    const selectedChatId = this.chatListControl.value[0];\n\n    if (message && selectedChatId) {\n      this.chatsService.addChatMessage(selectedChatId, message).subscribe(() => {\n        this.scrollToBottom();\n      });\n      this.messageControl.setValue('');\n    }\n  }\n\n  scrollToBottom() {\n    setTimeout(() => {\n      if (this.endOfChat) {\n        this.endOfChat.nativeElement.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }, 100);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.ChatsService));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endOfChat = _t.first);\n    }\n  },\n  decls: 30,\n  vars: 18,\n  consts: [[1, \"container\"], [1, \"chat-list\", \"mat-elevation-z5\"], [1, \"search-input\"], [\"matInput\", \"\", \"placeholder\", \"Search for users and start a chat\", 3, \"matAutocomplete\", \"formControl\"], [\"users\", \"matAutocomplete\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"multiple\", \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"messages\", \"mat-elevation-z5\"], [\"class\", \"messages-header\", 4, \"ngIf\", \"ngIfElse\"], [\"noChatSelected\", \"\"], [1, \"chat-area\"], [4, \"ngIf\"], [\"endOfChat\", \"\"], [1, \"input-area\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Enter your message...\", 3, \"formControl\", \"keydown.enter\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [3, \"value\", \"click\"], [3, \"value\"], [\"matListAvatar\", \"\", 3, \"src\"], [\"mat-line\", \"\", 1, \"chat-title\"], [1, \"chat-name\"], [1, \"chat-date\"], [\"mat-line\", \"\"], [1, \"messages-header\"], [3, \"src\"], [\"class\", \"chat-bubble-container\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-bubble-container\", 3, \"ngClass\"], [1, \"chat-bubble\"], [1, \"chat-time\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-form-field\");\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 4);\n      i0.ɵɵtemplate(7, HomeComponent_mat_option_7_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-selection-list\", 6);\n      i0.ɵɵelement(10, \"mat-divider\");\n      i0.ɵɵtemplate(11, HomeComponent_mat_list_option_11_Template, 11, 7, \"mat-list-option\", 7);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵtemplate(14, HomeComponent_div_14_Template, 4, 2, \"div\", 9);\n      i0.ɵɵpipe(15, \"async\");\n      i0.ɵɵtemplate(16, HomeComponent_ng_template_16_Template, 2, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(18, \"mat-divider\");\n      i0.ɵɵelementStart(19, \"div\", 11);\n      i0.ɵɵtemplate(20, HomeComponent_ng_container_20_Template, 3, 3, \"ng-container\", 12);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵelement(22, \"div\", null, 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"mat-form-field\", 15)(26, \"input\", 16);\n      i0.ɵɵlistener(\"keydown.enter\", function HomeComponent_Template_input_keydown_enter_26_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_27_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementStart(28, \"mat-icon\");\n      i0.ɵɵtext(29, \"send\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      const _r4 = i0.ɵɵreference(17);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matAutocomplete\", _r0)(\"formControl\", ctx.searchControl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 10, ctx.users$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"multiple\", false)(\"formControl\", ctx.chatListControl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 12, ctx.myChats$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 14, ctx.selectedChat$))(\"ngIfElse\", _r4);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 16, ctx.user$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.messageControl);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.MatIcon, i5.MatButton, i6.MatFormField, i6.MatSuffix, i7.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.FormControlDirective, i9.MatListAvatarCssMatStyler, i10.MatLine, i9.MatSelectionList, i9.MatListOption, i11.MatDivider, i12.MatAutocomplete, i12.MatAutocompleteTrigger, i10.MatOption, i3.AsyncPipe, i13.DateDisplayPipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: calc(100vh - 70px);\\n}\\n.container[_ngcontent-%COMP%]    > .chat-list[_ngcontent-%COMP%] {\\n  width: 40%;\\n  margin: 16px;\\n  background: #c5cae9;\\n  border-radius: 16px;\\n}\\n.container[_ngcontent-%COMP%]    > .chat-list[_ngcontent-%COMP%]   .chat-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.container[_ngcontent-%COMP%]    > .chat-list[_ngcontent-%COMP%]   .chat-title[_ngcontent-%COMP%]   .chat-name[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n.container[_ngcontent-%COMP%]    > .chat-list[_ngcontent-%COMP%]   .chat-title[_ngcontent-%COMP%]   .chat-date[_ngcontent-%COMP%] {\\n  font-size: 0.7rem;\\n  color: rgba(0, 0, 0, 0.7);\\n}\\n.container[_ngcontent-%COMP%]    > .chat-list[_ngcontent-%COMP%]   .search-input[_ngcontent-%COMP%] {\\n  margin: 24px;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%] {\\n  width: 60%;\\n  padding: 24px;\\n  margin: 16px;\\n  margin-left: 8px;\\n  border-radius: 16px;\\n  background: rgba(0, 0, 0, 0.05);\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .messages-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 8px;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .messages-header[_ngcontent-%COMP%]    > img[_ngcontent-%COMP%] {\\n  border-radius: 50%;\\n  object-fit: cover;\\n  margin-right: 16px;\\n  height: 35px;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .messages-header[_ngcontent-%COMP%]    > h2[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%] {\\n  height: calc(100vh - 270px);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  overflow: auto;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:first-child {\\n  margin-top: auto;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]   .chat-bubble-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  justify-content: flex-start;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]   .chat-bubble-container[_ngcontent-%COMP%]    > .chat-bubble[_ngcontent-%COMP%] {\\n  background: white;\\n  padding-top: 8px;\\n  padding-bottom: 18px;\\n  padding-left: 8px;\\n  padding-right: 100px;\\n  margin-bottom: 16px;\\n  border-radius: 8px;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  position: relative;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]   .chat-bubble-container[_ngcontent-%COMP%]    > .chat-bubble[_ngcontent-%COMP%]    > .chat-time[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 2px;\\n  right: 8px;\\n  font-size: 0.7rem;\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]   .chat-bubble-container.sender[_ngcontent-%COMP%] {\\n  justify-content: flex-end;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .chat-area[_ngcontent-%COMP%]   .chat-bubble-container.sender[_ngcontent-%COMP%]    > .chat-bubble[_ngcontent-%COMP%] {\\n  background: #c5cae9;\\n}\\n.container[_ngcontent-%COMP%]    > .messages[_ngcontent-%COMP%]   .input-area[_ngcontent-%COMP%] {\\n  padding-top: 16px;\\n  padding-bottom: 8px;\\n}\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsMEJBQUE7QUFDSjtBQUNJO0VBQ0ksVUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQ1I7QUFDUTtFQUVJLGFBQUE7RUFDQSw4QkFBQTtBQUFaO0FBRVk7RUFDSSxnQkFBQTtBQUFoQjtBQUdZO0VBQ0ksaUJBQUE7RUFDQSx5QkFBQTtBQURoQjtBQU1RO0VBQ0ksWUFBQTtBQUpaO0FBUUk7RUFDSSxVQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0JBQUE7QUFOUjtBQVFRO0VBQ0ksYUFBQTtFQUNBLGtCQUFBO0FBTlo7QUFRYTtFQUNJLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUFOakI7QUFTYTtFQUNHLFNBQUE7QUFQaEI7QUFXUTtFQUNJLDJCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFFQSxjQUFBO0FBVlo7QUFZWTtFQUNJLGdCQUFBO0FBVmhCO0FBYVk7RUFFSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLDJCQUFBO0FBWmhCO0FBY2dCO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtFQUFBLGtCQUFBO0VBRUEsa0JBQUE7QUFicEI7QUFlb0I7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtBQWJ4QjtBQW1CWTtFQUNJLHlCQUFBO0FBakJoQjtBQW1CZ0I7RUFDSSxtQkFBQTtBQWpCcEI7QUF1QlE7RUFDSSxpQkFBQTtFQUNBLG1CQUFBO0FBckJaO0FBMEJBO0VBQ0ksV0FBQTtBQXZCSiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA3MHB4KTtcblxuICAgID4gLmNoYXQtbGlzdCB7XG4gICAgICAgIHdpZHRoOiA0MCU7XG4gICAgICAgIG1hcmdpbjogMTZweDtcbiAgICAgICAgYmFja2dyb3VuZDogI2M1Y2FlOTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcblxuICAgICAgICAuY2hhdC10aXRsZSB7XG5cbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAgICAgICAgIC5jaGF0LW5hbWUge1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5jaGF0LWRhdGUge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsMCwwLDAuNylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICB9XG5cbiAgICAgICAgLnNlYXJjaC1pbnB1dCB7XG4gICAgICAgICAgICBtYXJnaW46IDI0cHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICA+IC5tZXNzYWdlcyB7XG4gICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIHBhZGRpbmc6IDI0cHg7XG4gICAgICAgIG1hcmdpbjogMTZweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjA1KTtcblxuICAgICAgICAubWVzc2FnZXMtaGVhZGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG5cbiAgICAgICAgICAgICA+IGltZyB7XG4gICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcbiAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgID4gaDIge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuY2hhdC1hcmVhIHtcbiAgICAgICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDI3MHB4KTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgICAgICAgICAgIG92ZXJmbG93OiBhdXRvO1xuXG4gICAgICAgICAgICA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogYXV0bztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmNoYXQtYnViYmxlLWNvbnRhaW5lciB7XG5cbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblxuICAgICAgICAgICAgICAgID4gLmNoYXQtYnViYmxlIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiA4cHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxOHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgICAgICAgICA+IC5jaGF0LXRpbWUge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAycHg7XG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogOHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjdyZW07XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLDAsMCwwLjYpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuY2hhdC1idWJibGUtY29udGFpbmVyLnNlbmRlciB7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA+IC5jaGF0LWJ1YmJsZSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNjNWNhZTk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICAuaW5wdXQtYXJlYSB7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA4cHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","UntypedFormControl","combineLatest","map","of","startWith","switchMap","tap","i0","HomeComponent","constructor","usersService","chatsService","currentUserProfile$","myChats$","allUsers$","user$","pipe","users","user","filter","u","uid","otherUsers$","searchControl","valueChanges","searchString","displayName","toLowerCase","includes","chatListControl","value","chats","find","c","id","ngOnInit","messages$","chatId","getChatMessages$","scrollToBottom","createChat","isExistingChat","subscribe","setValue","sendMessage","message","messageControl","selectedChatId","addChatMessage","setTimeout","endOfChat","nativeElement","scrollIntoView","behavior","selectors","viewQuery","ctx","_r4"],"sourceRoot":"","sources":["/home/manisha/Projects/angular-chat-app-master/src/app/components/home/home.component.ts","/home/manisha/Projects/angular-chat-app-master/src/app/components/home/home.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport {\n  combineLatest,\n  map,\n  Observable,\n  of,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport { Message } from 'src/app/models/chat';\nimport { ProfileUser } from 'src/app/models/user-profile';\nimport { ChatsService } from 'src/app/services/chats.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  @ViewChild('endOfChat')\n  endOfChat!: ElementRef;\n\n  user$ = this.usersService.currentUserProfile$;\n  myChats$ = this.chatsService.myChats$;\n\n  searchControl = new UntypedFormControl('');\n  messageControl = new UntypedFormControl('');\n  chatListControl = new UntypedFormControl('');\n\n  messages$: Observable<Message[]> | undefined;\n\n  otherUsers$ = combineLatest([this.usersService.allUsers$, this.user$]).pipe(\n    map(([users, user]) => users.filter((u) => u.uid !== user?.uid))\n  );\n\n  users$ = combineLatest([\n    this.otherUsers$,\n    this.searchControl.valueChanges.pipe(startWith('')),\n  ]).pipe(\n    map(([users, searchString]) => {\n      return users.filter((u) =>\n        u.displayName?.toLowerCase().includes(searchString.toLowerCase())\n      );\n    })\n  );\n\n  selectedChat$ = combineLatest([\n    this.chatListControl.valueChanges,\n    this.myChats$,\n  ]).pipe(map(([value, chats]) => chats.find((c) => c.id === value[0])));\n\n  constructor(\n    private usersService: UsersService,\n    private chatsService: ChatsService\n  ) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.chatListControl.valueChanges.pipe(\n      map((value) => value[0]),\n      switchMap((chatId) => this.chatsService.getChatMessages$(chatId)),\n      tap(() => {\n        this.scrollToBottom();\n      })\n    );\n  }\n\n  createChat(user: ProfileUser) {\n    this.chatsService\n      .isExistingChat(user.uid)\n      .pipe(\n        switchMap((chatId) => {\n          if (!chatId) {\n            return this.chatsService.createChat(user);\n          } else {\n            return of(chatId);\n          }\n        })\n      )\n      .subscribe((chatId) => {\n        this.chatListControl.setValue([chatId]);\n      });\n  }\n\n  sendMessage() {\n    const message = this.messageControl.value;\n    const selectedChatId = this.chatListControl.value[0];\n    if (message && selectedChatId) {\n      this.chatsService\n        .addChatMessage(selectedChatId, message)\n        .subscribe(() => {\n          this.scrollToBottom();\n        });\n      this.messageControl.setValue('');\n    }\n  }\n\n  scrollToBottom() {\n    setTimeout(() => {\n      if (this.endOfChat) {\n        this.endOfChat.nativeElement.scrollIntoView({ behavior: 'smooth' });\n      }\n    }, 100);\n  }\n}\n","<div class=\"container\">\n  <div class=\"chat-list mat-elevation-z5\">\n    <div class=\"search-input\">\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Search for users and start a chat\"\n          [matAutocomplete]=\"users\"\n          [formControl]=\"searchControl\"\n        />\n      </mat-form-field>\n      <mat-autocomplete #users=\"matAutocomplete\">\n        <mat-option\n          *ngFor=\"let user of users$ | async\"\n          [value]=\"''\"\n          (click)=\"createChat(user)\"\n        >\n          {{ user.displayName }}\n        </mat-option>\n      </mat-autocomplete>\n    </div>\n    <mat-selection-list [multiple]=\"false\" [formControl]=\"chatListControl\">\n      <mat-divider></mat-divider>\n      <mat-list-option *ngFor=\"let chat of myChats$ | async\" [value]=\"chat.id\">\n        <img\n          matListAvatar\n          [src]=\"\n            chat.chatPic ? chat.chatPic : 'assets/images/image-placeholder.png'\n          \"\n        />\n        <p mat-line class=\"chat-title\">\n          <span class=\"chat-name\">{{ chat.chatName }}</span\n          ><span class=\"chat-date\">{{\n            chat.lastMessageDate | dateDisplay\n          }}</span>\n        </p>\n        <p mat-line>{{ chat.lastMessage }}</p>\n        <mat-divider></mat-divider>\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div class=\"messages mat-elevation-z5\">\n    <div\n      class=\"messages-header\"\n      *ngIf=\"selectedChat$ | async as selectedChat; else noChatSelected\"\n    >\n      <img\n        [src]=\"\n          selectedChat.chatPic\n            ? selectedChat.chatPic\n            : 'assets/images/image-placeholder.png'\n        \"\n      />\n      <h2>{{ selectedChat.chatName }}</h2>\n    </div>\n    <ng-template #noChatSelected>\n      <h2>Messages</h2>\n    </ng-template>\n    <mat-divider></mat-divider>\n    <div class=\"chat-area\">\n      <ng-container *ngIf=\"user$ | async as currentUser\">\n        <ng-container *ngIf=\"messages$ | async as messages\">\n          <div\n            class=\"chat-bubble-container\"\n            [ngClass]=\"{ sender: message.senderId === currentUser.uid }\"\n            *ngFor=\"let message of messages\"\n          >\n            <div class=\"chat-bubble\">\n              {{ message.text }}\n              <span class=\"chat-time\">{{\n                message.sentDate | dateDisplay\n              }}</span>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n      <div #endOfChat></div>\n    </div>\n    <div class=\"input-area\">\n      <mat-form-field appearance=\"outline\">\n        <input\n          matInput\n          placeholder=\"Enter your message...\"\n          [formControl]=\"messageControl\"\n          (keydown.enter)=\"sendMessage()\"\n        />\n        <button mat-icon-button matSuffix (click)=\"sendMessage()\">\n          <mat-icon>send</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}