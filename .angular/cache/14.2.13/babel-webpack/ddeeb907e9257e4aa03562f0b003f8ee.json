{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { collectionChanges as collectionChanges$1, collection as collection$1, sortedChanges as sortedChanges$1, auditTrail as auditTrail$1, collectionData as collectionData$1, collectionCountSnap as collectionCountSnap$1, collectionCount as collectionCount$1, doc as doc$1, docData as docData$1, snapToData as snapToData$1, fromRef as fromRef$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, arrayRemove as arrayRemove$1, arrayUnion as arrayUnion$1, average as average$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, count as count$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, memoryEagerGarbageCollector as memoryEagerGarbageCollector$1, memoryLocalCache as memoryLocalCache$1, memoryLruGarbageCollector as memoryLruGarbageCollector$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, persistentLocalCache as persistentLocalCache$1, persistentMultipleTabManager as persistentMultipleTabManager$1, persistentSingleTabManager as persistentSingleTabManager$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, serverTimestamp as serverTimestamp$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\n\nclass Firestore {\n  constructor(firestore) {\n    return firestore;\n  }\n\n}\n\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\n\nclass FirestoreInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n  }\n\n}\n\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\n\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n  const defaultFirestore = ɵgetDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n  return defaultFirestore && new Firestore(defaultFirestore);\n}\n\nfunction firestoreInstanceFactory(fn) {\n  return (zone, injector) => {\n    const firestore = zone.runOutsideAngular(() => fn(injector));\n    return new Firestore(firestore);\n  };\n}\n\nconst FIRESTORE_INSTANCES_PROVIDER = {\n  provide: FirestoreInstances,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES]]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n  provide: Firestore,\n  useFactory: defaultFirestoreInstanceFactory,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES], FirebaseApp]\n};\n\nclass FirestoreModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fst');\n  }\n\n  static ɵfac = function FirestoreModule_Factory(t) {\n    return new (t || FirestoreModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FirestoreModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction provideFirestore(fn, ...deps) {\n  return {\n    ngModule: FirestoreModule,\n    providers: [{\n      provide: PROVIDED_FIRESTORE_INSTANCES,\n      useFactory: firestoreInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps, // Firestore+Auth work better if Auth is loaded first\n      [new Optional(), AuthInstances], [new Optional(), ɵAppCheckInstances], ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst collectionChanges = ɵzoneWrap(collectionChanges$1, true);\nconst collectionSnapshots = ɵzoneWrap(collection$1, true);\nconst sortedChanges = ɵzoneWrap(sortedChanges$1, true);\nconst auditTrail = ɵzoneWrap(auditTrail$1, true);\nconst collectionData = ɵzoneWrap(collectionData$1, true);\nconst collectionCountSnap = ɵzoneWrap(collectionCountSnap$1, true);\nconst collectionCount = ɵzoneWrap(collectionCount$1, true);\nconst docSnapshots = ɵzoneWrap(doc$1, true);\nconst docData = ɵzoneWrap(docData$1, true);\nconst snapToData = ɵzoneWrap(snapToData$1, true);\nconst fromRef = ɵzoneWrap(fromRef$1, true); // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\nconst addDoc = ɵzoneWrap(addDoc$1, true);\nconst aggregateFieldEqual = ɵzoneWrap(aggregateFieldEqual$1, true);\nconst aggregateQuerySnapshotEqual = ɵzoneWrap(aggregateQuerySnapshotEqual$1, true);\nconst and = ɵzoneWrap(and$1, true);\nconst arrayRemove = ɵzoneWrap(arrayRemove$1, true);\nconst arrayUnion = ɵzoneWrap(arrayUnion$1, true);\nconst average = ɵzoneWrap(average$1, true);\nconst clearIndexedDbPersistence = ɵzoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = ɵzoneWrap(collection$2, true);\nconst collectionGroup = ɵzoneWrap(collectionGroup$1, true);\nconst connectFirestoreEmulator = ɵzoneWrap(connectFirestoreEmulator$1, true);\nconst count = ɵzoneWrap(count$1, true);\nconst deleteAllPersistentCacheIndexes = ɵzoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = ɵzoneWrap(deleteDoc$1, true);\nconst deleteField = ɵzoneWrap(deleteField$1, true);\nconst disableNetwork = ɵzoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = ɵzoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = ɵzoneWrap(doc$2, true);\nconst documentId = ɵzoneWrap(documentId$1, true);\nconst enableIndexedDbPersistence = ɵzoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = ɵzoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = ɵzoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = ɵzoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = ɵzoneWrap(endAt$1, true);\nconst endBefore = ɵzoneWrap(endBefore$1, true);\nconst getAggregateFromServer = ɵzoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = ɵzoneWrap(getCountFromServer$1, true);\nconst getDoc = ɵzoneWrap(getDoc$1, true);\nconst getDocFromCache = ɵzoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = ɵzoneWrap(getDocFromServer$1, true);\nconst getDocs = ɵzoneWrap(getDocs$1, true);\nconst getDocsFromCache = ɵzoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = ɵzoneWrap(getDocsFromServer$1, true);\nconst getFirestore = ɵzoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = ɵzoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = ɵzoneWrap(increment$1, true);\nconst initializeFirestore = ɵzoneWrap(initializeFirestore$1, true);\nconst limit = ɵzoneWrap(limit$1, true);\nconst limitToLast = ɵzoneWrap(limitToLast$1, true);\nconst loadBundle = ɵzoneWrap(loadBundle$1, true);\nconst memoryEagerGarbageCollector = ɵzoneWrap(memoryEagerGarbageCollector$1, true);\nconst memoryLocalCache = ɵzoneWrap(memoryLocalCache$1, true);\nconst memoryLruGarbageCollector = ɵzoneWrap(memoryLruGarbageCollector$1, true);\nconst namedQuery = ɵzoneWrap(namedQuery$1, true);\nconst onSnapshot = ɵzoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = ɵzoneWrap(onSnapshotsInSync$1, true);\nconst or = ɵzoneWrap(or$1, true);\nconst orderBy = ɵzoneWrap(orderBy$1, true);\nconst persistentLocalCache = ɵzoneWrap(persistentLocalCache$1, true);\nconst persistentMultipleTabManager = ɵzoneWrap(persistentMultipleTabManager$1, true);\nconst persistentSingleTabManager = ɵzoneWrap(persistentSingleTabManager$1, true);\nconst query = ɵzoneWrap(query$1, true);\nconst queryEqual = ɵzoneWrap(queryEqual$1, true);\nconst refEqual = ɵzoneWrap(refEqual$1, true);\nconst runTransaction = ɵzoneWrap(runTransaction$1, true);\nconst serverTimestamp = ɵzoneWrap(serverTimestamp$1, true);\nconst setDoc = ɵzoneWrap(setDoc$1, true);\nconst setIndexConfiguration = ɵzoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\nconst snapshotEqual = ɵzoneWrap(snapshotEqual$1, true);\nconst startAfter = ɵzoneWrap(startAfter$1, true);\nconst startAt = ɵzoneWrap(startAt$1, true);\nconst sum = ɵzoneWrap(sum$1, true);\nconst terminate = ɵzoneWrap(terminate$1, true);\nconst updateDoc = ɵzoneWrap(updateDoc$1, true);\nconst waitForPendingWrites = ɵzoneWrap(waitForPendingWrites$1, true);\nconst where = ɵzoneWrap(where$1, true);\nconst writeBatch = ɵzoneWrap(writeBatch$1, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, auditTrail, average, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, count, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, memoryEagerGarbageCollector, memoryLocalCache, memoryLruGarbageCollector, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, persistentLocalCache, persistentMultipleTabManager, persistentSingleTabManager, provideFirestore, query, queryEqual, refEqual, runTransaction, serverTimestamp, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, waitForPendingWrites, where, writeBatch };","map":{"version":3,"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","VERSION","ɵAngularFireSchedulers","ɵAppCheckInstances","ɵzoneWrap","timer","from","concatMap","distinct","i0","InjectionToken","Optional","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","AuthInstances","registerVersion","collectionChanges","collectionChanges$1","collection","collection$1","sortedChanges","sortedChanges$1","auditTrail","auditTrail$1","collectionData","collectionData$1","collectionCountSnap","collectionCountSnap$1","collectionCount","collectionCount$1","doc","doc$1","docData","docData$1","snapToData","snapToData$1","fromRef","fromRef$1","addDoc","addDoc$1","aggregateFieldEqual","aggregateFieldEqual$1","aggregateQuerySnapshotEqual","aggregateQuerySnapshotEqual$1","and","and$1","arrayRemove","arrayRemove$1","arrayUnion","arrayUnion$1","average","average$1","clearIndexedDbPersistence","clearIndexedDbPersistence$1","collection$2","collectionGroup","collectionGroup$1","connectFirestoreEmulator","connectFirestoreEmulator$1","count","count$1","deleteAllPersistentCacheIndexes","deleteAllPersistentCacheIndexes$1","deleteDoc","deleteDoc$1","deleteField","deleteField$1","disableNetwork","disableNetwork$1","disablePersistentCacheIndexAutoCreation","disablePersistentCacheIndexAutoCreation$1","doc$2","documentId","documentId$1","enableIndexedDbPersistence","enableIndexedDbPersistence$1","enableMultiTabIndexedDbPersistence","enableMultiTabIndexedDbPersistence$1","enableNetwork","enableNetwork$1","enablePersistentCacheIndexAutoCreation","enablePersistentCacheIndexAutoCreation$1","endAt","endAt$1","endBefore","endBefore$1","getAggregateFromServer","getAggregateFromServer$1","getCountFromServer","getCountFromServer$1","getDoc","getDoc$1","getDocFromCache","getDocFromCache$1","getDocFromServer","getDocFromServer$1","getDocs","getDocs$1","getDocsFromCache","getDocsFromCache$1","getDocsFromServer","getDocsFromServer$1","getFirestore","getFirestore$1","getPersistentCacheIndexManager","getPersistentCacheIndexManager$1","increment","increment$1","initializeFirestore","initializeFirestore$1","limit","limit$1","limitToLast","limitToLast$1","loadBundle","loadBundle$1","memoryEagerGarbageCollector","memoryEagerGarbageCollector$1","memoryLocalCache","memoryLocalCache$1","memoryLruGarbageCollector","memoryLruGarbageCollector$1","namedQuery","namedQuery$1","onSnapshot","onSnapshot$1","onSnapshotsInSync","onSnapshotsInSync$1","or","or$1","orderBy","orderBy$1","persistentLocalCache","persistentLocalCache$1","persistentMultipleTabManager","persistentMultipleTabManager$1","persistentSingleTabManager","persistentSingleTabManager$1","query","query$1","queryEqual","queryEqual$1","refEqual","refEqual$1","runTransaction","runTransaction$1","serverTimestamp","serverTimestamp$1","setDoc","setDoc$1","setIndexConfiguration","setIndexConfiguration$1","setLogLevel","setLogLevel$1","snapshotEqual","snapshotEqual$1","startAfter","startAfter$1","startAt","startAt$1","sum","sum$1","terminate","terminate$1","updateDoc","updateDoc$1","waitForPendingWrites","waitForPendingWrites$1","where","where$1","writeBatch","writeBatch$1","Firestore","constructor","firestore","FIRESTORE_PROVIDER_NAME","FirestoreInstances","firestoreInstance$","pipe","PROVIDED_FIRESTORE_INSTANCES","defaultFirestoreInstanceFactory","provided","defaultApp","defaultFirestore","firestoreInstanceFactory","fn","zone","injector","runOutsideAngular","FIRESTORE_INSTANCES_PROVIDER","provide","deps","DEFAULT_FIRESTORE_INSTANCE_PROVIDER","useFactory","FirestoreModule","full","ɵfac","ɵmod","ɵinj","type","args","providers","provideFirestore","ngModule","multi","collectionSnapshots","docSnapshots"],"sources":["/home/manisha/Projects/angular-chat-app-master/node_modules/@angular/fire/fesm2022/angular-fire-firestore.mjs"],"sourcesContent":["import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { collectionChanges as collectionChanges$1, collection as collection$1, sortedChanges as sortedChanges$1, auditTrail as auditTrail$1, collectionData as collectionData$1, collectionCountSnap as collectionCountSnap$1, collectionCount as collectionCount$1, doc as doc$1, docData as docData$1, snapToData as snapToData$1, fromRef as fromRef$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, arrayRemove as arrayRemove$1, arrayUnion as arrayUnion$1, average as average$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, count as count$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, memoryEagerGarbageCollector as memoryEagerGarbageCollector$1, memoryLocalCache as memoryLocalCache$1, memoryLruGarbageCollector as memoryLruGarbageCollector$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, persistentLocalCache as persistentLocalCache$1, persistentMultipleTabManager as persistentMultipleTabManager$1, persistentSingleTabManager as persistentSingleTabManager$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, serverTimestamp as serverTimestamp$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\n\nclass Firestore {\n    constructor(firestore) {\n        return firestore;\n    }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n    constructor() {\n        return ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n    }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n    const defaultFirestore = ɵgetDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n    return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n    return (zone, injector) => {\n        const firestore = zone.runOutsideAngular(() => fn(injector));\n        return new Firestore(firestore);\n    };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n    provide: FirestoreInstances,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n    ]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n    provide: Firestore,\n    useFactory: defaultFirestoreInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n        FirebaseApp,\n    ]\n};\nclass FirestoreModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'fst');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: FirestoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: FirestoreModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: FirestoreModule, providers: [\n            DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n            FIRESTORE_INSTANCES_PROVIDER,\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: FirestoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n                        FIRESTORE_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\nfunction provideFirestore(fn, ...deps) {\n    return {\n        ngModule: FirestoreModule,\n        providers: [{\n                provide: PROVIDED_FIRESTORE_INSTANCES,\n                useFactory: firestoreInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    // Firestore+Auth work better if Auth is loaded first\n                    [new Optional(), AuthInstances],\n                    [new Optional(), ɵAppCheckInstances],\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst collectionChanges = ɵzoneWrap(collectionChanges$1, true);\nconst collectionSnapshots = ɵzoneWrap(collection$1, true);\nconst sortedChanges = ɵzoneWrap(sortedChanges$1, true);\nconst auditTrail = ɵzoneWrap(auditTrail$1, true);\nconst collectionData = ɵzoneWrap(collectionData$1, true);\nconst collectionCountSnap = ɵzoneWrap(collectionCountSnap$1, true);\nconst collectionCount = ɵzoneWrap(collectionCount$1, true);\nconst docSnapshots = ɵzoneWrap(doc$1, true);\nconst docData = ɵzoneWrap(docData$1, true);\nconst snapToData = ɵzoneWrap(snapToData$1, true);\nconst fromRef = ɵzoneWrap(fromRef$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = ɵzoneWrap(addDoc$1, true);\nconst aggregateFieldEqual = ɵzoneWrap(aggregateFieldEqual$1, true);\nconst aggregateQuerySnapshotEqual = ɵzoneWrap(aggregateQuerySnapshotEqual$1, true);\nconst and = ɵzoneWrap(and$1, true);\nconst arrayRemove = ɵzoneWrap(arrayRemove$1, true);\nconst arrayUnion = ɵzoneWrap(arrayUnion$1, true);\nconst average = ɵzoneWrap(average$1, true);\nconst clearIndexedDbPersistence = ɵzoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = ɵzoneWrap(collection$2, true);\nconst collectionGroup = ɵzoneWrap(collectionGroup$1, true);\nconst connectFirestoreEmulator = ɵzoneWrap(connectFirestoreEmulator$1, true);\nconst count = ɵzoneWrap(count$1, true);\nconst deleteAllPersistentCacheIndexes = ɵzoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = ɵzoneWrap(deleteDoc$1, true);\nconst deleteField = ɵzoneWrap(deleteField$1, true);\nconst disableNetwork = ɵzoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = ɵzoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = ɵzoneWrap(doc$2, true);\nconst documentId = ɵzoneWrap(documentId$1, true);\nconst enableIndexedDbPersistence = ɵzoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = ɵzoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = ɵzoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = ɵzoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = ɵzoneWrap(endAt$1, true);\nconst endBefore = ɵzoneWrap(endBefore$1, true);\nconst getAggregateFromServer = ɵzoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = ɵzoneWrap(getCountFromServer$1, true);\nconst getDoc = ɵzoneWrap(getDoc$1, true);\nconst getDocFromCache = ɵzoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = ɵzoneWrap(getDocFromServer$1, true);\nconst getDocs = ɵzoneWrap(getDocs$1, true);\nconst getDocsFromCache = ɵzoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = ɵzoneWrap(getDocsFromServer$1, true);\nconst getFirestore = ɵzoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = ɵzoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = ɵzoneWrap(increment$1, true);\nconst initializeFirestore = ɵzoneWrap(initializeFirestore$1, true);\nconst limit = ɵzoneWrap(limit$1, true);\nconst limitToLast = ɵzoneWrap(limitToLast$1, true);\nconst loadBundle = ɵzoneWrap(loadBundle$1, true);\nconst memoryEagerGarbageCollector = ɵzoneWrap(memoryEagerGarbageCollector$1, true);\nconst memoryLocalCache = ɵzoneWrap(memoryLocalCache$1, true);\nconst memoryLruGarbageCollector = ɵzoneWrap(memoryLruGarbageCollector$1, true);\nconst namedQuery = ɵzoneWrap(namedQuery$1, true);\nconst onSnapshot = ɵzoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = ɵzoneWrap(onSnapshotsInSync$1, true);\nconst or = ɵzoneWrap(or$1, true);\nconst orderBy = ɵzoneWrap(orderBy$1, true);\nconst persistentLocalCache = ɵzoneWrap(persistentLocalCache$1, true);\nconst persistentMultipleTabManager = ɵzoneWrap(persistentMultipleTabManager$1, true);\nconst persistentSingleTabManager = ɵzoneWrap(persistentSingleTabManager$1, true);\nconst query = ɵzoneWrap(query$1, true);\nconst queryEqual = ɵzoneWrap(queryEqual$1, true);\nconst refEqual = ɵzoneWrap(refEqual$1, true);\nconst runTransaction = ɵzoneWrap(runTransaction$1, true);\nconst serverTimestamp = ɵzoneWrap(serverTimestamp$1, true);\nconst setDoc = ɵzoneWrap(setDoc$1, true);\nconst setIndexConfiguration = ɵzoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\nconst snapshotEqual = ɵzoneWrap(snapshotEqual$1, true);\nconst startAfter = ɵzoneWrap(startAfter$1, true);\nconst startAt = ɵzoneWrap(startAt$1, true);\nconst sum = ɵzoneWrap(sum$1, true);\nconst terminate = ɵzoneWrap(terminate$1, true);\nconst updateDoc = ɵzoneWrap(updateDoc$1, true);\nconst waitForPendingWrites = ɵzoneWrap(waitForPendingWrites$1, true);\nconst where = ɵzoneWrap(where$1, true);\nconst writeBatch = ɵzoneWrap(writeBatch$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, auditTrail, average, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, count, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, memoryEagerGarbageCollector, memoryLocalCache, memoryLruGarbageCollector, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, persistentLocalCache, persistentMultipleTabManager, persistentSingleTabManager, provideFirestore, query, queryEqual, refEqual, runTransaction, serverTimestamp, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, waitForPendingWrites, where, writeBatch };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}